name: Release

on:
  push:
    tags:
      - 'v*'

env:
  ARTIFACT_DIR: release-artifacts

jobs:
#   release-linux:
# #    if: startsWith(github.ref, 'refs/tags/')
# #    needs: [check]
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         target:
#           [
#             aarch64-unknown-linux-gnu,
#             x86_64-unknown-linux-gnu,
#             aarch64-unknown-linux-musl,
#           ]
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3

#       - name: Init rust environment
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           profile: minimal
#           override: true
#           target: ${{ matrix.target }}

#       - name: Run build (${{ matrix.target }})
#         uses: actions-rs/cargo@v1
#         with:
#           use-cross: true
#           command: build
#           args: --release --target ${{ matrix.target }}

#       - name: Prepare artifacts
#         run: |
#           SRC_DIR=target/${{ matrix.target }}/release
#           DEST_DIR=${{ env.ARTIFACT_DIR }}
#           mkdir -p ${DEST_DIR}

#           RELEASE_NAME=action-test-${{ matrix.target }}-${{ github.ref_name }}
#           CHECKSUM=${RELEASE_NAME}.checksum.txt
#           mv ${SRC_DIR}/action-test ${RELEASE_NAME}
#           shasum -a 256 ${RELEASE_NAME} > ${CHECKSUM}

#           cp ${RELEASE_NAME} ${DEST_DIR}
#           cp ${CHECKSUM} ${DEST_DIR}

#           ls ${DEST_DIR}

#       - name: Upload artifacts to summary
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.ARTIFACT_DIR }}
#           path: |
#             ${{ env.ARTIFACT_DIR }}/

#       - name: Upload artifacts to release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             ${{ env.ARTIFACT_DIR }}/*.*

#   release-macos:
#     runs-on: macos-latest
#     strategy:
#       matrix:
#         target:
#           [
#             x86_64-apple-darwin,
#             aarch64-apple-darwin,
#           ]
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3

#       - name: Init rust environment
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           profile: minimal
#           override: true
#           target: ${{ matrix.target }}

#       - name: Run build (${{ matrix.target }})
#         uses: actions-rs/cargo@v1
#         with:
#           use-cross: true
#           command: build
#           args: --release --target ${{ matrix.target }}

#       - name: Prepare artifacts
#         run: |
#           SRC_DIR=target/${{ matrix.target }}/release
#           DEST_DIR=${{ env.ARTIFACT_DIR }}
#           mkdir -p ${DEST_DIR}

#           RELEASE_NAME=action-test-${{ matrix.target }}-${{ github.ref_name }}
#           CHECKSUM=${RELEASE_NAME}.checksum.txt
#           mv ${SRC_DIR}/action-test ${RELEASE_NAME}
#           shasum -a 256 ${RELEASE_NAME} > ${CHECKSUM}

#           cp ${RELEASE_NAME} ${DEST_DIR}
#           cp ${CHECKSUM} ${DEST_DIR}

#           ls ${DEST_DIR}

#       - name: Upload artifacts to summary
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.ARTIFACT_DIR }}
#           path: |
#             ${{ env.ARTIFACT_DIR }}/

#       - name: Upload artifacts to release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             ${{ env.ARTIFACT_DIR }}/*.*

  release-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          [
#            x86_64-pc-windows-gnu,
            x86_64-pc-windows-msvc,
          ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # - name: Init rust environment
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     profile: minimal
      #     override: true
      #     target: ${{ matrix.target }}

      # - name: Prepare build
      #   shell: bash
      #   run: |
      #     git clone https://github.com/Microsoft/vcpkg --depth=1
      #     cd vcpkg
      #     bootstrap-vcpkg.bat
      #     vcpkg.exe integrate install
      #     vcpkg.exe install openssl:x64-windows-static
      #     export OPENSSL_NO_VENDOR=1
      #     export OPENSSL_DIR=$PWD/packages/openssl_x64-windows-static

      # - name: Run build (${{ matrix.target }})
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        shell: bash
        run: |
          SRC_DIR=target/${{ matrix.target }}/release
          DEST_DIR=${{ env.ARTIFACT_DIR }}
          mkdir -p ${DEST_DIR}

          RELEASE_NAME=action-test-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM=${RELEASE_NAME}.checksum.txt
          mv ${SRC_DIR}/action-test ${RELEASE_NAME}
          certutil -hashfile ${RELEASE_NAME} SHA256 >${CHECKSUM}

          cp ${RELEASE_NAME} ${DEST_DIR}
          cp ${CHECKSUM} ${DEST_DIR}

          ls ${DEST_DIR}

      # - name: Upload artifacts to summary
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.ARTIFACT_DIR }}
      #     path: |
      #       ${{ env.ARTIFACT_DIR }}/

      # - name: Upload artifacts to release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       ${{ env.ARTIFACT_DIR }}/*.*